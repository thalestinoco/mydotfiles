// {KALAMINE_MARK}
// KALAMINE::CUSTOM::BEGIN
// Generated by kalamine on 2024-09-18
//
// This XKB symbols file should be copied to:
//     /usr/share/X11/xkb/symbols/custom
// or
//     $XKB_CONFIG_ROOT/symbols/custom
//
// File          : custom.xkb_symbols
// Project page  : https://OneDeadKey.github.com/kalamine
// Author        : thalestinoco
// Version       : 0.0.1
// License       : WTFPL - Do What The Fuck You Want Public License
//
// custom QWERTY brazilian layout
//
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
// │ "   │ !   │ @   │ #   │ $   │ %   │ ¨   │ &   │ *   │ (   │ )   │ _   │ +   ┃          ┃
// │ '   │ 1 ¹ │ 2 ² │ 3 ³ │ 4 £ │ 5 ¢ │ 6 ¬ │ 7   │ 8   │ 9   │ 0   │ -   │ = § ┃ ⌫        ┃
// ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┳━━━━━━━┫
// ┃        ┃ Q   │ W   │ E   │ R   │ T   │ Y   │ U   │ I   │ O   │ P   │*`   │ {   ┃       ┃
// ┃ ↹      ┃   ! │   @ │   # │   $ │   % │   ¨ │   & │   * │   ( │   ) │*´   │ [ ª ┃       ┃
// ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓  ⏎   ┃
// ┃         ┃ A   │ S   │ D   │ F   │ G   │ H   │ J   │ K   │ L   │ Ç   │*^   │ }   ┃      ┃
// ┃ ⇬       ┃   - │   _ │   = │   + │  *µ │     │     │     │     │     │*~   │ ] º ┃      ┃
// ┣━━━━━━┳━━┹──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┷━━━━━┻━━━━━━┫
// ┃      ┃ ?   │ Z   │ X   │ C   │ V   │ B   │ N   │ M   │ <   │ >   │ ;   ┃               ┃
// ┃ ⇧    ┃ / ? │     │     │     │     │     │     │     │ ,   │ .   │ :   ┃ ⇧             ┃
// ┣━━━━━━┻┳━━━━┷━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
// ┃       ┃       ┃       ┃                                ┃       ┃       ┃       ┃       ┃
// ┃ Ctrl  ┃ super ┃ Alt   ┃ ␣                              ┃ AltGr ┃ super ┃ menu  ┃ Ctrl  ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛

partial alphanumeric_keys modifier_keys
xkb_symbols "custom" {
    name[group1]= "custom QWERTY brazilian layout";
    key.type[group1] = "FOUR_LEVEL";

    // Digits
    key <AE01> {[ 1               , exclam          , onesuperior     , VoidSymbol      ]}; // 1 ! ¹
    key <AE02> {[ 2               , at              , twosuperior     , VoidSymbol      ]}; // 2 @ ²
    key <AE03> {[ 3               , numbersign      , threesuperior   , VoidSymbol      ]}; // 3 # ³
    key <AE04> {[ 4               , dollar          , sterling        , VoidSymbol      ]}; // 4 $ £
    key <AE05> {[ 5               , percent         , cent            , VoidSymbol      ]}; // 5 % ¢
    key <AE06> {[ 6               , diaeresis       , notsign         , VoidSymbol      ]}; // 6 ¨ ¬
    key <AE07> {[ 7               , ampersand       , VoidSymbol      , VoidSymbol      ]}; // 7 &
    key <AE08> {[ 8               , asterisk        , VoidSymbol      , VoidSymbol      ]}; // 8 *
    key <AE09> {[ 9               , parenleft       , VoidSymbol      , VoidSymbol      ]}; // 9 (
    key <AE10> {[ 0               , parenright      , VoidSymbol      , VoidSymbol      ]}; // 0 )

    // Letters, first row
    key <AD01> {[ q               , Q               , exclam          , VoidSymbol      ]}; // q Q !
    key <AD02> {[ w               , W               , at              , VoidSymbol      ]}; // w W @
    key <AD03> {[ e               , E               , numbersign      , VoidSymbol      ]}; // e E #
    key <AD04> {[ r               , R               , dollar          , VoidSymbol      ]}; // r R $
    key <AD05> {[ t               , T               , percent         , VoidSymbol      ]}; // t T %
    key <AD06> {[ y               , Y               , diaeresis       , VoidSymbol      ]}; // y Y ¨
    key <AD07> {[ u               , U               , ampersand       , VoidSymbol      ]}; // u U &
    key <AD08> {[ i               , I               , asterisk        , VoidSymbol      ]}; // i I *
    key <AD09> {[ o               , O               , parenleft       , VoidSymbol      ]}; // o O (
    key <AD10> {[ p               , P               , parenright      , VoidSymbol      ]}; // p P )

    // Letters, second row
    key <AC01> {[ a               , A               , minus           , VoidSymbol      ]}; // a A -
    key <AC02> {[ s               , S               , underscore      , VoidSymbol      ]}; // s S _
    key <AC03> {[ d               , D               , Prior           , VoidSymbol      ]}; // d D =
    key <AC04> {[ f               , F               , Next            , VoidSymbol      ]}; // f F +
    key <AC05> {[ g               , G               , dead_greek      , VoidSymbol      ]}; // g G µ
    key <AC06> {[ h               , H               , Left            , VoidSymbol      ]}; // h H
    key <AC07> {[ j               , J               , Down            , VoidSymbol      ]}; // j J
    key <AC08> {[ k               , K               , Up              , VoidSymbol      ]}; // k K
    key <AC09> {[ l               , L               , Right           , VoidSymbol      ]}; // l L
    key <AC10> {[ ccedilla        , Ccedilla        , VoidSymbol      , VoidSymbol      ]}; // ç Ç

    // Letters, third row
    key <AB01> {[ z               , Z               , VoidSymbol      , VoidSymbol      ]}; // z Z
    key <AB02> {[ x               , X               , VoidSymbol      , VoidSymbol      ]}; // x X
    key <AB03> {[ c               , C               , equal           , VoidSymbol      ]}; // c C
    key <AB04> {[ v               , V               , plus            , VoidSymbol      ]}; // v V
    key <AB05> {[ b               , B               , VoidSymbol      , VoidSymbol      ]}; // b B
    key <AB06> {[ n               , N               , VoidSymbol      , VoidSymbol      ]}; // n N
    key <AB07> {[ m               , M               , VoidSymbol      , VoidSymbol      ]}; // m M
    key <AB08> {[ comma           , less            , VoidSymbol      , VoidSymbol      ]}; // , <
    key <AB09> {[ period          , greater         , VoidSymbol      , VoidSymbol      ]}; // . >
    key <AB10> {[ colon           , semicolon       , VoidSymbol      , VoidSymbol      ]}; // : ;

    // Pinky keys
    key <AE11> {[ minus           , underscore      , VoidSymbol      , VoidSymbol      ]}; // - _
    key <AE12> {[ equal           , plus            , section         , VoidSymbol      ]}; // = + §
    key <AE13> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <AD11> {[ dead_acute      , dead_grave      , VoidSymbol      , VoidSymbol      ]}; // ´ `
    key <AD12> {[ bracketleft     , braceleft       , ordfeminine     , VoidSymbol      ]}; // [ { ª
    key <AC11> {[ dead_tilde      , dead_circumflex , VoidSymbol      , VoidSymbol      ]}; // ~ ^
    key <AB11> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <TLDE> {[ apostrophe      , quotedbl        , VoidSymbol      , VoidSymbol      ]}; // ' "
    key <BKSL> {[ bracketright    , braceright      , masculine       , VoidSymbol      ]}; // ] } º
    key <LSGT> {[ slash           , question        , question        , VoidSymbol      ]}; // / ? ?

    // Space bar
    key <SPCE> {[ space           , space           , Return           , space           ]}; //

    include "level3(ralt_switch)"
};
// vim: ft=xkb:fdm=indent:ts=4:nowrap
// KALAMINE::CUSTOM::END
